{"link": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays", "name": "Sum of All Odd Length Subarrays", "difficulty": "Easy", "statement": "<div><p>Given an array of positive integers&nbsp;<code>arr</code>, calculate the sum of all possible odd-length subarrays.</p>\n\n<p>A subarray is a contiguous&nbsp;subsequence of the array.</p>\n\n<p>Return&nbsp;<em>the sum of all odd-length subarrays of&nbsp;</em><code>arr</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> arr = [1,4,2,5,3]\n<strong>Output:</strong> 58\n<strong>Explanation: </strong>The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> arr = [1,2]\n<strong>Output:</strong> 3\n<b>Explanation: </b>There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> arr = [10,11,12]\n<strong>Output:</strong> 66\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n</div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    int sumOddLengthSubarrays(vector<int> &arr)\n    {\n\n        int n = arr.size();\n\n        int sum = 0;\n\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i; j < n; j += 2)\n            {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n\n        return sum;\n    }\n};"}