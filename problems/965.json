{"link": "https://leetcode.com/problems/univalued-binary-tree", "name": "Univalued Binary Tree", "difficulty": "Easy", "statement": "<div><p>A binary tree is <em>univalued</em> if every node in the tree has the same value.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if the given tree is univalued.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/28/unival_bst_1.png\" style=\"width: 265px; height: 172px;\">\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">[1,1,1,1,1,null,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/28/unival_bst_2.png\" style=\"width: 198px; height: 169px;\">\n<pre><strong>Input: </strong><span id=\"example-input-2-1\">[2,2,2,5,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree will be in the range <code>[1, 100]</code>.</li>\n\t<li>Each node's value will be an integer in the range <code>[0, 99]</code>.</li>\n</ol>\n</div>", "language": "c", "solution": "\nstruct TreeNode\n{\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n};\n\nbool isUnivalTree(struct TreeNode *root)\n{\n    if(!root) return true;\n    if(root->left) {\n        if (root->left->val != root->val) return false;\n        if (!isUnivalTree(root->left)) return false;\n    }\n    if(root->right) {\n        if (root->right->val != root->val) return false;\n        if (!isUnivalTree(root->right)) return false;\n    }\n\n    return true;\n\n}"}