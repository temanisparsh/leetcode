{"link": "https://leetcode.com/problems/delete-columns-to-make-sorted", "name": "Delete Columns to Make Sorted", "difficulty": "Easy", "statement": "<div><p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\n\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\n\n<p>For example, if we have an array <code>A = [\"abcdef\",\"uvwxyz\"]</code> and deletion indices <code>{0, 2, 3}</code>, then the final array after deletions is <code>[\"bef\", \"vyz\"]</code>,&nbsp;and the remaining columns of <code>A</code> are&nbsp;<code>[\"b\",\"v\"]</code>, <code>[\"e\",\"y\"]</code>, and <code>[\"f\",\"z\"]</code>.&nbsp; (Formally, the <code>c</code>-th column is <code>[A[0][c], A[1][c], ..., A[A.length-1][c]]</code>).</p>\n\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, each remaining column in A is in <strong>non-decreasing</strong> sorted order.</p>\n\n<p>Return the minimum possible value of <code>D.length</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> A = [\"cba\",\"daf\",\"ghi\"]\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>\nAfter choosing D = {1}, each column [\"c\",\"d\",\"g\"] and [\"a\",\"f\",\"i\"] are in non-decreasing sorted order.\nIf we chose D = {}, then a column [\"b\",\"a\",\"h\"] would not be in non-decreasing sorted order.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> A = [\"a\",\"b\"]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>D = {}\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> A = [\"zyx\",\"wvu\",\"tsr\"]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>D = {0, 1, 2}\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 1000</code></li>\n</ul>\n</div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    int minDeletionSize(vector<string> &A)\n    {\n\n        int len = A[0].length();\n        int n = A.size();\n\n        int del[len];\n        fill_n(del, len, 0);\n\n        for(int i = 0; i < n-1; i++) {\n            for(int j = 0; j < len; j++) {\n                if (A[i][j] > A[i+1][j]) {\n                    del[j] = 1;\n                    \n                }\n            }\n        }\n\n        int count = 0;\n        for(int i: del)\n            count += i;\n\n        return count;\n\n    }\n};"}