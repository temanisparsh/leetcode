{"link": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number", "name": "How Many Numbers Are Smaller Than the Current Number", "difficulty": "Easy", "statement": "<div><p>Given the array <code>nums</code>, for each <code>nums[i]</code> find out how many numbers in the array are smaller than it. That is, for each <code>nums[i]</code> you have to count the number of valid <code>j's</code>&nbsp;such that&nbsp;<code>j != i</code> <strong>and</strong> <code>nums[j] &lt; nums[i]</code>.</p>\n\n<p>Return the answer in an array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [8,1,2,2,3]\n<strong>Output:</strong> [4,0,1,1,3]\n<strong>Explanation:</strong> \nFor nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). \nFor nums[1]=1 does not exist any smaller number than it.\nFor nums[2]=2 there exist one smaller number than it (1). \nFor nums[3]=2 there exist one smaller number than it (1). \nFor nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [6,5,4,8]\n<strong>Output:</strong> [2,1,0,3]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [7,7,7,7]\n<strong>Output:</strong> [0,0,0,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    vector<int> smallerNumbersThanCurrent(vector<int> &nums)\n    {\n\n        vector<int> temp = nums;\n\n        sort(temp.begin(), temp.end());\n\n        int first_pos[101];\n        fill_n(first_pos, 101, -1);\n\n        int n = temp.size();\n\n        for (int i = 0; i < n; i++) {\n            if (first_pos[temp[i]] == -1) {\n                first_pos[temp[i]] = i;\n            }\n        }\n\n        vector<int> res;\n\n        for (int i = 0; i < n; i++) {\n            res.push_back(first_pos[nums[i]]);\n        }\n\n        return res;\n\n\n    }\n};"}