{"link": "https://leetcode.com/problems/middle-of-the-linked-list", "name": "Middle of the Linked List", "difficulty": "Easy", "statement": "<div><p>Given a non-empty, singly&nbsp;linked list with head node <code>head</code>, return&nbsp;a&nbsp;middle node of linked list.</p>\n\n<p>If there are two middle nodes, return the second middle node.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4,5]</span>\n<strong>Output: </strong>Node 3 from this list (Serialization: <span id=\"example-output-1\">[3,4,5]</span>)\nThe returned node has value 3.  (The judge's serialization of this node is [3,4,5]).\nNote that we returned a ListNode object ans, such that:\nans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6]</span>\n<strong>Output: </strong>Node 4 from this list (Serialization: <span id=\"example-output-2\">[4,5,6]</span>)\nSince the list has two middle nodes with values 3 and 4, we return the second one.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given list will be between <code>1</code>&nbsp;and <code>100</code>.</li>\n</ul>\n</div>\n</div>\n</div>", "language": "C", "solution": "\nstruct ListNode\n{\n    int val;\n    struct ListNode *next;\n};\n\nstruct ListNode *middleNode(struct ListNode *head)\n{\n    int n = 0;\n    struct ListNode* curr = head;\n\n    while(curr) {\n        curr = curr->next;\n        ++n;\n    }\n    curr = head;\n    for(int i = 0;  i < n/2; ++i)\n        curr = curr->next;\n    return curr;\n}"}