{"link": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits", "name": "Find Numbers with Even Number of Digits", "difficulty": "Easy", "statement": "<div>Given an array <code>nums</code> of integers, return how many of them contain an <strong>even number</strong> of digits.\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [12,345,2,6,7896]\n<strong>Output:</strong> 2\n<strong>Explanation: \n</strong>12 contains 2 digits (even number of digits).&nbsp;\n345 contains 3 digits (odd number of digits).&nbsp;\n2 contains 1 digit (odd number of digits).&nbsp;\n6 contains 1 digit (odd number of digits).&nbsp;\n7896 contains 4 digits (even number of digits).&nbsp;\nTherefore only 12 and 7896 contain an even number of digits.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [555,901,482,1771]\n<strong>Output:</strong> 1 \n<strong>Explanation: </strong>\nOnly 1771 contains an even number of digits.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n</ul>\n</div>", "language": "cpp", "solution": "#include<iostream>\n#include<bits/stdc++.h>\n#include <cmath> \n\nusing namespace std;\n\nclass Solution {\npublic:\n    int findNumbers(vector<int>& nums) {\n\n        int count = 0;\n        for (int i: nums) {\n            if ((int)ceil(log10(i+1)) % 2 == 0)\n                count ++;\n        }\n\n        return count;\n        \n    }\n};"}