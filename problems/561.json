{"link": "https://leetcode.com/problems/array-partition-i", "name": "Array Partition I", "difficulty": "Easy", "statement": "<div><p>\nGiven an array of <b>2n</b> integers, your task is to group these integers into <b>n</b> pairs of integer, say (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) which makes sum of min(a<sub>i</sub>, b<sub>i</sub>) for all i from 1 to n as large as possible.\n</p>\n\n<p><b>Example 1:</b><br>\n</p><pre><b>Input:</b> [1,4,3,2]\n\n<b>Output:</b> 4\n<b>Explanation:</b> n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\n</pre>\n<p></p>\n\n<p><b>Note:</b><br>\n</p><ol>\n<li><b>n</b> is a positive integer, which is in the range of [1, 10000].</li>\n<li>All the integers in the array will be in the range of [-10000, 10000].</li>\n</ol>\n<p></p></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    int arrayPairSum(vector<int>& nums) {\n\n       sort(nums.begin(), nums.end());\n\n       int n = nums.size();\n       int res = 0;\n       for(int i = 0; i < n; i += 2)\n            res += nums[i];\n        \n        return res;\n        \n    }\n};"}