{"link": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix", "name": "The K Weakest Rows in a Matrix", "difficulty": "Easy", "statement": "<div><p>Given a <code>m&nbsp;* n</code>&nbsp;matrix <code>mat</code> of <em>ones</em>&nbsp;(representing soldiers) and <em>zeros</em>&nbsp;(representing civilians), return the indexes of the <code>k</code> weakest rows in the matrix ordered from the weakest to the strongest.</p>\n\n<p>A row <em><strong>i</strong></em> is weaker than row <em><strong>j</strong></em>, if the number of soldiers in row <em><strong>i</strong></em> is less than the number of soldiers in row <em><strong>j</strong></em>, or they have the same number of soldiers but <em><strong>i</strong></em> is less than <em><strong>j</strong></em>. Soldiers are <strong>always</strong> stand in the frontier of a row, that is, always <em>ones</em>&nbsp;may appear first and then <em>zeros</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> mat = \n[[1,1,0,0,0],\n [1,1,1,1,0],\n [1,0,0,0,0],\n [1,1,0,0,0],\n [1,1,1,1,1]], \nk = 3\n<strong>Output:</strong> [2,0,3]\n<strong>Explanation:</strong> \nThe number of soldiers for each row is: \nrow 0 -&gt; 2 \nrow 1 -&gt; 4 \nrow 2 -&gt; 1 \nrow 3 -&gt; 2 \nrow 4 -&gt; 5 \nRows ordered from the weakest to the strongest are [2,0,3,1,4]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> mat = \n[[1,0,0,0],\n&nbsp;[1,1,1,1],\n&nbsp;[1,0,0,0],\n&nbsp;[1,0,0,0]], \nk = 2\n<strong>Output:</strong> [0,2]\n<strong>Explanation:</strong> \nThe number of soldiers for each row is: \nrow 0 -&gt; 1 \nrow 1 -&gt; 4 \nrow 2 -&gt; 1 \nrow 3 -&gt; 1 \nRows ordered from the weakest to the strongest are [0,2,3,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code><font face=\"monospace\">2 &lt;= n, m &lt;= 100</font></code></li>\n\t<li><code>1 &lt;= k &lt;= m</code></li>\n\t<li><code>matrix[i][j]</code> is either 0 <strong>or</strong> 1.</li>\n</ul>\n</div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    vector<int> kWeakestRows(vector<vector<int>> &mat, int k)\n    {\n\n        int m = mat.size();\n        int n = mat[0].size();\n\n        int *arr = (int *)malloc(sizeof(int) * m);\n        fill_n(arr, m, 0);\n\n        vector<int> output;\n        output.reserve(k);\n\n        int done = 0;\n\n        for (int i = 0; i < n && done < k; i++)\n        {\n            for (int j = 0; j < m && done < k; j++)\n            {\n                if (!(mat[j][i] || arr[j]))\n                {\n                    output.push_back(j);\n                    arr[j] = 1;\n                    ++done;\n                }\n            }\n        }\n\n        if (done != k) {\n            for(int i = 0; i < m && done < k; i++) {\n                if (!arr[i]) {\n                    ++done;\n                    output.push_back(i);\n                }\n            }\n        }\n\n\n        return output;\n    }\n};"}