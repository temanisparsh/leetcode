{"link": "https://leetcode.com/problems/find-common-characters", "name": "Find Common Characters", "difficulty": "Easy", "statement": "<div><p>Given an array&nbsp;<code>A</code> of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list <strong>(including duplicates)</strong>.&nbsp;&nbsp;For example, if a character occurs 3 times&nbsp;in all strings but not 4 times, you need to include that character three times&nbsp;in the final answer.</p>\n\n<p>You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">[\"bella\",\"label\",\"roller\"]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[\"e\",\"l\",\"l\"]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-2-1\">[\"cool\",\"lock\",\"cook\"]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[\"c\",\"o\"]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n\t<li><code>A[i][j]</code> is a lowercase letter</li>\n</ol>\n</div>\n</div></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    vector<string> commonChars(vector<string> &A)\n    {\n\n        int len = A.size();\n        vector<vector<int>> m;\n        for (int i = 0; i < 26; i++)\n        {\n            vector<int> t;\n            for (string temp : A)\n                t.push_back(0);\n            m.push_back(t);\n        }\n\n        for (int i = 0; i < len; ++i)\n        {\n            for (char ch : A[i])\n            {\n                ++m[(int)(ch)-97][i];\n            }\n        }\n\n        vector<string> out;\n\n        for (int i = 0; i < 26; i++)\n        {\n            vector<int> counts = m[i];\n            int min_count = *min_element(counts.begin(), counts.end());\n            stringstream s;\n            s << (char)(i + 97);\n            for (int j = 0; j < min_count; ++j)\n            {\n                out.push_back(s.str());\n            }\n        }\n\n        return out;\n    }\n};"}