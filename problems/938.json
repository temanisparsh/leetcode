{"link": "https://leetcode.com/problems/range-sum-of-bst", "name": "Range Sum of BST", "difficulty": "Easy", "statement": "<div><p>Given the <code>root</code> node of a binary search tree, return the sum of values of all nodes with value between <code>L</code> and <code>R</code> (inclusive).</p>\n\n<p>The binary search tree is guaranteed to have unique values.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong>root = <span id=\"example-input-1-1\">[10,5,15,3,7,null,18]</span>, L = <span id=\"example-input-1-2\">7</span>, R = <span id=\"example-input-1-3\">15</span>\n<strong>Output: </strong><span id=\"example-output-1\">32</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong>root = <span id=\"example-input-2-1\">[10,5,15,3,7,13,18,1,null,6]</span>, L = <span id=\"example-input-2-2\">6</span>, R = <span id=\"example-input-2-3\">10</span>\n<strong>Output: </strong><span id=\"example-output-2\">23</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree is at most <code>10000</code>.</li>\n\t<li>The final answer is guaranteed to be less than <code>2^31</code>.</li>\n</ol>\n</div>\n</div></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution\n{\npublic:\n    int rangeSumBST(TreeNode *root, int L, int R)\n    {\n\n        int sum = 0;\n        if (root)\n        {\n            sum = root->val >= L && root->val <= R ? root->val : 0;\n            sum += rangeSumBST(root->left, L, R);\n            sum += rangeSumBST(root->right, L, R);\n        }\n\n        return sum;\n    }\n};"}