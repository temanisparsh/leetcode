{"link": "https://leetcode.com/problems/sort-array-by-parity-ii", "name": "Sort Array By Parity II", "difficulty": "Easy", "statement": "<div><p>Given an array <code>A</code>&nbsp;of non-negative integers, half of the integers in A are odd, and half of the integers are even.</p>\n\n<p>Sort the array so that whenever <code>A[i]</code> is odd, <code>i</code> is odd; and whenever <code>A[i]</code> is even, <code>i</code> is even.</p>\n\n<p>You may return any answer array that satisfies this condition.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">[4,2,5,7]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[4,5,2,7]</span>\n<strong>Explanation: </strong>[4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>A.length % 2 == 0</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> sortArrayByParityII(vector<int>& A) {\n\n        vector<int> odd;\n        vector<int> even;\n\n        vector<int> res;\n\n        for (int i: A) {\n            if (i % 2) odd.push_back(i);\n            else even.push_back(i);\n        }\n\n        int even_len = even.size();\n        int odd_len = odd.size();\n\n        for (int i = 0; i < odd_len; ++i) {\n            res.push_back(even[i]);\n            res.push_back(odd[i]);\n        }\n\n        if (even_len > odd_len) \n            res.push_back(even[even_len - 1]);\n\n        return res;\n        \n    }\n};"}