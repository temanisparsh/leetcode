{"link": "https://leetcode.com/problems/build-an-array-with-stack-operations", "name": "Build an Array With Stack Operations", "difficulty": "Easy", "statement": "<div><p>Given an array <code>target</code> and&nbsp;an integer <code>n</code>. In each iteration, you will read a number from &nbsp;<code>list = {1,2,3..., n}</code>.</p>\n\n<p>Build the <code>target</code>&nbsp;array&nbsp;using the following operations:</p>\n\n<ul>\n\t<li><strong>Push</strong>: Read a new element from the beginning&nbsp;<code>list</code>, and push it in the array.</li>\n\t<li><strong>Pop</strong>: delete the last element of&nbsp;the array.</li>\n\t<li>If the target array is already&nbsp;built, stop reading more elements.</li>\n</ul>\n\n<p>You are guaranteed that the target array is strictly&nbsp;increasing, only containing&nbsp;numbers between 1 to <code>n</code>&nbsp;inclusive.</p>\n\n<p>Return the operations to build the target array.</p>\n\n<p>You are guaranteed that the answer is unique.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> target = [1,3], n = 3\n<strong>Output:</strong> [\"Push\",\"Push\",\"Pop\",\"Push\"]\n<strong>Explanation: \n</strong>Read number 1 and automatically push in the array -&gt; [1]\nRead number 2 and automatically push in the array then Pop it -&gt; [1]\nRead number 3 and automatically push in the array -&gt; [1,3]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> target = [1,2,3], n = 3\n<strong>Output:</strong> [\"Push\",\"Push\",\"Push\"]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> target = [1,2], n = 4\n<strong>Output:</strong> [\"Push\",\"Push\"]\n<strong>Explanation: </strong>You only need to read the first 2 numbers and stop.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre><strong>Input:</strong> target = [2,3,4], n = 4\n<strong>Output:</strong> [\"Push\",\"Pop\",\"Push\",\"Push\",\"Push\"]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= target[i]&nbsp;&lt;= 100</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>target</code> is strictly&nbsp;increasing.</li>\n</ul>\n</div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution\n{\npublic:\n    vector<string> buildArray(vector<int> &target, int n)\n    {\n\n        string push = \"Push\";\n        string pop = \"Pop\";\n\n        vector<string> res;\n\n        int index = 0;\n\n        for (int num = 1; index < target.size() && num <= n; ++num)\n        {\n            res.push_back(push);\n            if (num == target[index])\n            {\n                ++index;\n            }\n            else\n            {\n                res.push_back(pop);\n            }\n        }\n\n        return res;\n    }\n};"}