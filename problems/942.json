{"link": "https://leetcode.com/problems/di-string-match", "name": "DI String Match", "difficulty": "Easy", "statement": "<div><p>Given a string <code>S</code> that <strong>only</strong> contains \"I\" (increase) or \"D\" (decrease), let <code>N = S.length</code>.</p>\n\n<p>Return <strong>any</strong> permutation <code>A</code> of <code>[0, 1, ..., N]</code> such that for all <code>i = 0,&nbsp;..., N-1</code>:</p>\n\n<ul>\n\t<li>If <code>S[i] == \"I\"</code>, then <code>A[i] &lt; A[i+1]</code></li>\n\t<li>If <code>S[i] == \"D\"</code>, then <code>A[i] &gt; A[i+1]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">\"IDID\"</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,4,1,3,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-2-1\">\"III\"</span>\n<strong>Output: </strong><span id=\"example-output-2\">[0,1,2,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-3-1\">\"DDI\"</span>\n<strong>Output: </strong><span id=\"example-output-3\">[3,2,0,1]</span></pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 10000</code></li>\n\t<li><code>S</code> only contains characters <code>\"I\"</code> or <code>\"D\"</code>.</li>\n</ol></div>", "language": "cpp", "solution": "#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> diStringMatch(string S) {\n\n        vector<int> res;\n\n        int n = S.length();\n\n        if (S[0] == 'I') res.push_back(0);\n        else res.push_back(n);\n\n        int ICount = count(S.begin(), S.end(), 'I');\n        int DCount = n - ICount;\n\n        int I, D;\n        if (S[0] == 'I') {\n            D = DCount;\n            I = D+1;\n        }\n        else {\n            D = DCount - 1;\n            I = D+1;\n        }\n\n        for(char i: S) {\n            if (i == 'I') res.push_back(I++);\n            else res.push_back(D--);\n        }\n\n        return res;\n\n    }\n};"}